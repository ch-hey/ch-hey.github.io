<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ch-hey.github.io/</id><title>ChBlog</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2023-02-20T21:51:34+08:00</updated> <author> <name>HEY</name> <uri>https://ch-hey.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://ch-hey.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://ch-hey.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 HEY </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[Python] Virtual Env(venv)로 가상환경 만들기</title><link href="https://ch-hey.github.io/posts/venv-Python-32bit/" rel="alternate" type="text/html" title="[Python] Virtual Env(venv)로 가상환경 만들기" /><published>2023-02-20T18:55:00+08:00</published> <updated>2023-02-20T21:51:06+08:00</updated> <id>https://ch-hey.github.io/posts/venv-Python-32bit/</id> <content src="https://ch-hey.github.io/posts/venv-Python-32bit/" /> <author> <name>HEY</name> </author> <category term="Python" /> <category term="venv" /> <summary> 가상환경 설정을 통해 다양한 개발환경 세팅하는 방법을 정리해본다. 가상환경이라고 하니까 뭐 대단히 별거인거 같지만, 막상 해보면 쉽게 된다. 하나의 PC에서 python v3.2도 쓰고 v3.6도 쓰고 그러고 싶으면 하는 일들이라고 생각하면 편하다. 자세하게는 Python 64bit가 설치된 PC에서 python 32bit 개발환경을 가상환경으로 만드는 방법에 대해 정리해본다. vscode를 사용할 것이다. 구글에 ‘python venv 가상환경’ 이렇게 검색해보면 많이들 나온다. 1. Intro 여태까지 단순한 공학용 계산이나 아주 기초적인 자동화만 했었다. 이런 상황에서는 기존에 잘 사용하던 Python version에서 벗어나 새로운 개발환경이 필요한 경우는 아직까지는 한 번도 없었다. ... </summary> </entry> <entry><title>[머신러닝] 공부 시작한다면 이 순서로</title><link href="https://ch-hey.github.io/posts/How-to-study-ML-Coursera/" rel="alternate" type="text/html" title="[머신러닝] 공부 시작한다면 이 순서로" /><published>2023-01-04T19:55:00+08:00</published> <updated>2023-01-04T19:55:00+08:00</updated> <id>https://ch-hey.github.io/posts/How-to-study-ML-Coursera/</id> <content src="https://ch-hey.github.io/posts/How-to-study-ML-Coursera/" /> <author> <name>HEY</name> </author> <category term="Machine Learning" /> <category term="Syllabus" /> <summary> 매우 건방진 얘기 같겠지만 체계적으로 머신러닝 기초 공부를 시작 해보고 싶다면 아래 순서대로 해보시기를 추천드린다. What is Machine Learning? Linear Regression Gradient Descent Logistic Regression Artifical Neural Network Decision Tree Supervised Machine Learning Applications Some Unsupervised Machine Learning (Clustering, Anomaly detection, PCA) 처음 머신러닝이란것에 관심이 생겨서 공부해보려 했을 때 인터넷에 수많은 정보 중에 기초부터 다질만한 체계적인 과정을 접하기 까지 많은 시간... </summary> </entry> <entry><title>[머신러닝] Tensorflow</title><link href="https://ch-hey.github.io/posts/AI-Tensorflow/" rel="alternate" type="text/html" title="[머신러닝] Tensorflow" /><published>2022-12-25T19:55:00+08:00</published> <updated>2022-12-26T19:32:26+08:00</updated> <id>https://ch-hey.github.io/posts/AI-Tensorflow/</id> <content src="https://ch-hey.github.io/posts/AI-Tensorflow/" /> <author> <name>HEY</name> </author> <category term="Machine Learning" /> <summary> Tensorflow로 Deep-Learning 해보자. Tensorflow Blog에 잘 정리된 튜토리얼 따라할거니까 생각보다 어렵지 않다. 물론 제대로 하려면 여러가지를 알아둬야 한다. 인공신경망, 딥러닝, 여러 수학들이랑 정의들, 라이브러리 테크닉들, 그리고 제일 중요한건 딥러닝을 적용해보려는 분야에 대한 지식이다. 이건, 어떻게 할 수 없으니 알아서 잘 해보자. 좀 더 원활한 이해를 위해서는 여기와 여기를 읽어보고 시작하기를 추천드린다. 아니면 이 포스팅은 그냥 가볍게 읽으면서 지나가도 괜찮을 것 같다. 1. Intro 딥러닝, 인공신경망 이거는 다른 포스팅에 정리되어 있고, Tensorflow에 대해 간단히 알아본다. 위키에서는 이렇게 말한다. 구글이 2011년에 개발을 시작하... </summary> </entry> <entry><title>[Python] Automation - 2. COM Object</title><link href="https://ch-hey.github.io/posts/python-automation-COM/" rel="alternate" type="text/html" title="[Python] Automation - 2. COM Object" /><published>2022-11-09T19:55:00+08:00</published> <updated>2022-11-09T19:55:00+08:00</updated> <id>https://ch-hey.github.io/posts/python-automation-COM/</id> <content src="https://ch-hey.github.io/posts/python-automation-COM/" /> <author> <name>HEY</name> </author> <category term="Python" /> <category term="Automation" /> <summary> 좀 더 고급진 ‘자동화’라는 것을 해보자. 마찬가지로 Python으로 하고 window 운영체제 한정이다. 조금만 더 자동화에 대해 파보면 나같은 프로그래밍 초심자는 이해하기 힘든 용어들이 쏟아져 나온다. 대표적으로 API가 그랬고 ProgID 등등 뭐 많았다. 아직 잘 모르겠지만 COM Object도 결국 API중에 하나인건가 싶다. 다 알아두면 좋지만, 지금 당장은 딱 필요한것에 대해서만 짚고 넘어가자. 관심있으면 구글링도 해보고 자동화해보면서 관련한 error도 겪어보고 그러면 될 것 같다. 확실히 공학용 계산이나 머신러닝에 비해서 자동화라는 주제는 개발자의 영역에 더 가까운 것 같다. 1. Intro GUI 자동화는 앞 포스팅에서 다루었다. 남은 하나인 COM Object에서 COM은... </summary> </entry> <entry><title>[Python] Automation - 1. GUI</title><link href="https://ch-hey.github.io/posts/python-automation-gui/" rel="alternate" type="text/html" title="[Python] Automation - 1. GUI" /><published>2022-10-19T19:55:00+08:00</published> <updated>2022-10-19T19:55:00+08:00</updated> <id>https://ch-hey.github.io/posts/python-automation-gui/</id> <content src="https://ch-hey.github.io/posts/python-automation-gui/" /> <author> <name>HEY</name> </author> <category term="Python" /> <category term="Automation" /> <summary> ‘자동화’라는 것을 해보자. Python으로 하고 window 운영체제 한정이다. 보통 자동화라고 하면 단순 반복스러운 일들을 클릭 한번으로 화면이 휙휙 바뀌면서 막 컴퓨터가 알아서 해주는 그런 움짤들이 떠오른다. 좀 있어보이게 그런 것도 한번 해보자. 따지고보면 컴퓨터한테 어떤 일을 시킨다는 입장에서 정도의 차이야 있겠지만 모든 코딩은 자동화라고도 할수있지 않나 싶다. 구글링 해보니 자동화의 의미에 대해 써놓은 글도 있다. 1. Intro 먼저 다른 포스팅과는 다르게 이번에 다룰 내용들에는 컴퓨터 용어가 좀 많이 나온다. 본격적인 자동화를 시작하기 전에 몇 가지 용어들을 정리해보자. 구글링과 눈치로 대충 느낌만 알고있는 그런 용어들이라는 점 감안해주길 바란다. 다룰 용어에 대한 자세한 정의가 ... </summary> </entry> </feed>
